% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/create-functions.R
\name{create_project_doc}
\alias{create_project_doc}
\title{Create a New Project Document within a Programme}
\usage{
create_project_doc(
  projectPrefix,
  projectName,
  projectParentPath,
  authorValue = Sys.info()["user"],
  projectTitle = "",
  projDocTemplate = "Project-Doc-Template.Rmd",
  projDocSummaryTemplate = "Project-Doc-Summary-Template.Rmd"
)
}
\arguments{
\item{projectPrefix}{Character. A unique alphanumeric identifier for the project.}

\item{projectName}{Character. The name of the new project. Must not contain spaces.}

\item{projectParentPath}{Character. The file path to an existing directory
below a programme.}

\item{authorValue}{Character. The author of the project document. Defaults to
the system username.}

\item{projectTitle}{Character. The title of the project. If empty, it will be
derived from \code{projectName}.}

\item{projDocTemplate}{Character. The filename of the project document template.
Default is \code{"Project-Doc-Template.Rmd"}.}

\item{projDocSummaryTemplate}{Character. The filename of the project document
summary template. Default is \code{"Project-Doc-Summary-Template.Rmd"}.}
}
\value{
Character. The file path of the created project document Rmd file.
}
\description{
Generates a new project document within an existing programme directory,
creating the necessary directory structure, R Markdown files, and linking
the new project document to the programme or section index file.
}
\details{
This function performs the following steps:
\enumerate{
\item Ensures \code{projectName} does not contain spaces.
\item Identifies the root organisation directory from \code{projectParentPath}.
\item Validates that \code{projectParentPath} is inside a programme directory.
\item Creates a new project directory and project document Rmd file.
\item Populates the project document with metadata such as prefix, title, and author.
\item Updates the programme or section index file to link to the new project.
A section index file defines a programme section, and is created to bridge
the summary of new project documents in a programme section with the main
programme index.
}

The function ensures that all directories and files are properly created and
linked within the project structure.
}
\note{
\itemize{
\item The \code{projectName} should not contain spaces.
\item The \code{projectPrefix} should be alphanumeric and unique within the programme.
\item The function modifies files directly on disk. Ensure backups are created
before running.
\item The function relies on a structured organisation and programme directory;
incorrect structures may cause failures.
}
}
\examples{
\dontrun{
# Create a new project document within a programme
create_project_doc(
  projectPrefix = "PRJ001",
  projectName = "DataAnalysis",
  projectParentPath = "/path/to/programme",
  authorValue = "sjwest",
  projectTitle = "Data Analysis Project",
  projDocTemplate = "Project-Doc-Template.Rmd",
  projDocSummaryTemplate = "Project-Doc-Summary-Template.Rmd"
)
}

}
\seealso{
\itemize{
\item \code{\link{find_org_directory}} to locate the organisation directory.
\item \code{\link{get_settings_yml}} for retrieving configuration settings.
\item \code{\link{create_directory}} for creating project directories.
\item \code{\link{write_file}} for writing content to files.
}
}
