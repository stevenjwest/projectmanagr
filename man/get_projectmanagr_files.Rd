% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/filesystem-functions.R
\name{get_projectmanagr_files}
\alias{get_projectmanagr_files}
\title{Gather projectmanagr files from a given location (file or directory)}
\usage{
get_projectmanagr_files(location, orgPath, settings)
}
\arguments{
\item{location}{A path to either a file or directory. Must be inside the
projectmanagr organisation specified by \code{orgPath}.}

\item{orgPath}{Absolute path to the root of the organisation.}

\item{settings}{A list of organisation settings, as loaded by
\code{\link[=get_settings_yml]{get_settings_yml()}}. Expected to include:
\itemize{
\item \code{"FileTypeSuffix"} (default \code{"Rmd"}) â€“ the extension used.
\item \code{"ProjectPrefixSep"}, \code{"ProjectIndexSep"}, etc. for file naming.
}}
}
\value{
A character vector of absolute file paths to recognized projectmanagr
files (e.g. org index, programme index, project docs, notes).
}
\description{
If \code{location} is a single file, confirms it has the correct extension
and checks its classification (ORG, PROG, DOC, NOTE, HEAD, SUB).
If it is a directory, recursively gather all projectmanagr files in that
directory tree. If \code{location} is exactly \code{orgPath}, then we exclude
the config, volumes, site, and journal directories from the search.
}
\examples{
\dontrun{
  # Suppose 'location' is either an Rmd file or a folder
  orgPath <- "/path/to/myOrg"
  settings <- get_settings_yml(orgPath)
  myFiles <- get_projectmanagr_files(location = orgPath, orgPath, settings)
  # 'myFiles' now has a list of valid projectmanagr Rmd files from the org root
}

}
\seealso{
\code{\link[=check_projectmanagr_file]{check_projectmanagr_file()}}, \code{\link[=get_file_list_to_project_notes]{get_file_list_to_project_notes()}},
\code{\link[=confirm_find_org]{confirm_find_org()}}
}
